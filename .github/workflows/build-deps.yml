name: Build Dependencies with MinGW-w64

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        platform: 
          - mingw64

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up MSYS2 for MinGW-w64
        if: matrix.platform == 'mingw64'
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkg-config

      - name: Set up MinGW-w64 environment
        run: |
          echo "INSTALLDIR=$GITHUB_WORKSPACE/deps-x64" >> $GITHUB_ENV
          mkdir -p $GITHUB_WORKSPACE/deps-build
          mkdir -p $GITHUB_WORKSPACE/deps-x64

      - name: Install dependencies using pacman
        run: |
          msys2_shell_path="C:\\msys64\\usr\\bin\\bash.exe"
          & "$msys2_shell_path" -c "pacman -Syu --noconfirm"
          & "$msys2_shell_path" -c "pacman -S --noconfirm mingw-w64-x86_64-qt6 mingw-w64-x86_64-sdl2"

      - name: Download and extract SDL2
        run: |
          set SDL=SDL2-2.30.1
          curl -L -o "%SDL%.zip" "https://libsdl.org/release/%SDL%.zip"
          7z x "%SDL%.zip"
          cd "%SDL%"
          cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$GITHUB_WORKSPACE/deps-x64" -DBUILD_SHARED_LIBS=ON -DSDL_SHARED=ON -DSDL_STATIC=OFF -G Ninja
          cmake --build build --parallel
          ninja -C build install
          cd ..

      - name: Download and extract Qt
        run: |
          set QT=6.6.2
          curl -L -o "qtbase-everywhere-src-%QT%.zip" "https://download.qt.io/official_releases/qt/%QT:~0,3%/%QT%/submodules/qtbase-everywhere-src-%QT%.zip"
          7z x "qtbase-everywhere-src-%QT%.zip"
          cd "qtbase-everywhere-src-%QT%"
          cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$GITHUB_WORKSPACE/deps-x64" -DQT_BUILD_EXAMPLES=OFF -G Ninja
          cmake --build build --parallel
          ninja -C build install
          cd ..

      - name: Package dependencies into 7z archive
        run: |
          7z a "$GITHUB_WORKSPACE/deps-x64.7z" "$GITHUB_WORKSPACE/deps-x64/*"

      - name: Upload dependencies as artifact
        uses: actions/upload-artifact@v4
        with:
          name: deps-x64
          path: $GITHUB_WORKSPACE/deps-x64.7z
